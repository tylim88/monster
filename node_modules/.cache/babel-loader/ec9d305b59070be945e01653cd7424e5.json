{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VATS\\\\Desktop\\\\monsters-rolodex\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      // will get the data from componentDidMount()\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    //life-cycle method\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  render() {\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"serach\",\n      placeholder: \"Search Monsters\",\n      onChange: e => this.setState({\n        searchField: e.target.value\n      }) // { this.setState({ searchField:e.target.value }, () => console.log(this.state));   \n      //as setState is an async function, we have to use callback func  in setState to console that(or anything)\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      monsters: filteredmonsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/VATS/Desktop/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","App","constructor","state","monsters","searchfield","componentDidMount","fetch","then","response","json","users","setState","render","searchField","filteredMonsters","filter","monster","name","toLowerCase","includes","e","target","value","filteredmonsters"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,4CAAzB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AACI;AACfC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAAE;AACpBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACR,MAAAA,QAAQ,EAAEO;AAAX,KAAd,CAFf;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,QAAF;AAAYU,MAAAA;AAAZ,QAA4B,KAAKX,KAAvC;AACA,UAAMY,gBAAgB,GAAGX,QAAQ,CAACY,MAAT,CAAgBC,OAAO,IAC1CA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCN,WAAW,CAACK,WAAZ,EAApC,CADmB,CAAzB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,WAAW,EAAC,iBAFZ;AAGA,MAAA,QAAQ,EAAKE,CAAC,IAAI,KAAKT,QAAL,CAAc;AAAEE,QAAAA,WAAW,EAACO,CAAC,CAACC,MAAF,CAASC;AAAvB,OAAd,CAHlB,CAIE;AACA;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eASE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAaD;;AAhCyB;;AAmC5B,eAAevB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],  // will get the data from componentDidMount()\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() { //life-cycle method\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users})); \n  }\n\n  render() {\n    const { monsters, searchField } = this.state; \n    const filteredMonsters = monsters.filter(monster => \n          monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n\n        <input \n        type='serach' \n        placeholder='Search Monsters'\n        onChange = { e => this.setState({ searchField:e.target.value })}   \n          // { this.setState({ searchField:e.target.value }, () => console.log(this.state));   \n          //as setState is an async function, we have to use callback func  in setState to console that(or anything)\n        />\n        <CardList monsters={filteredmonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}